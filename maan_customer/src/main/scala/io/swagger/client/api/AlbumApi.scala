/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.AffectedRows
import io.swagger.client.model.AlbumInfoRequest
import io.swagger.client.model.AlbumList
import io.swagger.client.model.AlbumRequest
import io.swagger.client.model.AlbumUpdateRequest
import io.swagger.client.model.CourseActivityPhotoRequest
import io.swagger.client.model.CourseActivityRearrangeRequest
import io.swagger.client.model.InsertReturn
import io.swagger.client.model.NotificationList
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object AlbumApi {

  /**
   * 重組後，須由前端給 weight，後端照這個 weight 寫入排列順序
   * 
   * Expected answers:
   *   code 200 :  (Successful operation)
   * 
   * @param token 
   * @param albumId 
   * @param body 
   */
  def albumAlbumIdRearrangePost(token: String, albumId: Int, body: Option[CourseActivityRearrangeRequest] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/goodspeed666/maan_customer/1.0.0", "/album/{album_id}/rearrange", "application/json")
      .withBody(body)
      .withPathParam("album_id", albumId)
      .withHeaderParam("token", token)
      .withSuccessResponse[Unit](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 201 : AffectedRows (successful operation)
   * 
   * @param token 
   * @param albumId 
   * @param body 
   */
  def albumsAlbumIdGet(token: String, albumId: String, body: Option[AlbumUpdateRequest] = None): ApiRequest[AffectedRows] =
    ApiRequest[AffectedRows](ApiMethods.GET, "https://virtserver.swaggerhub.com/goodspeed666/maan_customer/1.0.0", "/albums/{album_id}", "application/json")
      .withBody(body)
      .withPathParam("album_id", albumId)
      .withHeaderParam("token", token)
      .withSuccessResponse[AffectedRows](201)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : AffectedRows (successful operation)
   * 
   * @param token 
   * @param albumId 
   * @param photoId 
   * @param id album id
   */
  def albumsAlbumIdPhotoIdDelete(token: String, albumId: Int, photoId: Int, id: Int): ApiRequest[AffectedRows] =
    ApiRequest[AffectedRows](ApiMethods.DELETE, "https://virtserver.swaggerhub.com/goodspeed666/maan_customer/1.0.0", "/albums/{album_id}/{photo_id}", "application/json")
      .withQueryParam("id", id)
      .withPathParam("album_id", albumId)
      .withPathParam("photo_id", photoId)
      .withHeaderParam("token", token)
      .withSuccessResponse[AffectedRows](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 201 : AffectedRows (successful operation)
   * 
   * @param token 
   * @param albumId 
   * @param body 
   */
  def albumsAlbumIdPhotoPost(token: String, albumId: String, body: Option[CourseActivityPhotoRequest] = None): ApiRequest[AffectedRows] =
    ApiRequest[AffectedRows](ApiMethods.POST, "https://virtserver.swaggerhub.com/goodspeed666/maan_customer/1.0.0", "/albums/{album_id}/photo", "application/json")
      .withBody(body)
      .withPathParam("album_id", albumId)
      .withHeaderParam("token", token)
      .withSuccessResponse[AffectedRows](201)
        /**
   * 
   * 
   * Expected answers:
   *   code 201 : AffectedRows (successful operation)
   * 
   * @param token 
   * @param albumId 
   * @param body 
   */
  def albumsAlbumIdPost(token: String, albumId: String, body: Option[AlbumInfoRequest] = None): ApiRequest[AffectedRows] =
    ApiRequest[AffectedRows](ApiMethods.POST, "https://virtserver.swaggerhub.com/goodspeed666/maan_customer/1.0.0", "/albums/{album_id}", "application/json")
      .withBody(body)
      .withPathParam("album_id", albumId)
      .withHeaderParam("token", token)
      .withSuccessResponse[AffectedRows](201)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : AlbumList (successful operation)
   * 
   * @param token 
   */
  def albumsGet(token: String): ApiRequest[AlbumList] =
    ApiRequest[AlbumList](ApiMethods.GET, "https://virtserver.swaggerhub.com/goodspeed666/maan_customer/1.0.0", "/albums", "application/json")
      .withHeaderParam("token", token)
      .withSuccessResponse[AlbumList](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : AlbumList (successful operation)
   * 
   * @param token 
   */
  def albumsGetYearsGet(token: String): ApiRequest[AlbumList] =
    ApiRequest[AlbumList](ApiMethods.GET, "https://virtserver.swaggerhub.com/goodspeed666/maan_customer/1.0.0", "/albums/get_years", "application/json")
      .withHeaderParam("token", token)
      .withSuccessResponse[AlbumList](200)
        /**
   * 拿到 album_id 後，再把照片用 POST /albums/{$id} 上傳
   * 
   * Expected answers:
   *   code 201 : InsertReturn (successful operation)
   * 
   * @param token 
   * @param body 
   */
  def albumsPost(token: String, body: Option[AlbumRequest] = None): ApiRequest[InsertReturn] =
    ApiRequest[InsertReturn](ApiMethods.POST, "https://virtserver.swaggerhub.com/goodspeed666/maan_customer/1.0.0", "/albums", "application/json")
      .withBody(body)
      .withHeaderParam("token", token)
      .withSuccessResponse[InsertReturn](201)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : NotificationList (successful operation)
   * 
   * @param token 
   */
  def notificationsGet(token: String): ApiRequest[NotificationList] =
    ApiRequest[NotificationList](ApiMethods.GET, "https://virtserver.swaggerhub.com/goodspeed666/maan_customer/1.0.0", "/notifications", "application/json")
      .withHeaderParam("token", token)
      .withSuccessResponse[NotificationList](200)
      

}

