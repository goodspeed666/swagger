{
  "swagger" : "2.0",
  "info" : {
    "description" : "MAAN CS API",
    "version" : "1.0.0",
    "title" : "Maan Customer Service API"
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/goodspeed666/maan_cs/1.0.0",
  "tags" : [ {
    "name" : "user",
    "description" : "Operations about user"
  }, {
    "name" : "customer",
    "description" : "Operations about customer"
  }, {
    "name" : "common",
    "description" : "Operations about common service"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/user/login" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Logs user into the system",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "account",
          "in" : "query",
          "description" : "The user name for login",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "The password for login in clear text",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "Email or password is wrong"
          },
          "404" : {
            "description" : "Account does not exist"
          }
        }
      }
    },
    "/user/me" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get myself information",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/user/logout" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs out current logged in user session",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user/add" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can only be done by the logged in user.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "account",
          "in" : "query",
          "description" : "帳號",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "密碼",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "姓名",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "email",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dept",
          "in" : "query",
          "description" : "部門",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Role",
          "required" : true,
          "type" : "integer",
          "enum" : [ "Administrator", "Manager", "Employee" ]
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Some fields are not completed"
          }
        }
      }
    },
    "/user/{userid}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get user by userid",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Invalid userid supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Updated user",
        "description" : "This can only be done by the logged in user.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userid",
          "in" : "path",
          "description" : "name that need to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Updated user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid user supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Delete user",
        "description" : "This can only be done by the logged in user.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userid",
          "in" : "path",
          "description" : "The user that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid userid supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    },
    "/customer/add" : {
      "post" : {
        "tags" : [ "customer" ],
        "summary" : "Create customer",
        "description" : "Create customer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cid",
          "in" : "query",
          "description" : "客戶編號",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "客戶姓名",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "email",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mobile_phone",
          "in" : "query",
          "description" : "手機號碼",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "home_phone",
          "in" : "query",
          "description" : "家裡電話",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pos",
          "in" : "query",
          "description" : "郵遞區號",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "address",
          "in" : "query",
          "description" : "地址",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id_num",
          "in" : "query",
          "description" : "身分證字號",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "birth",
          "in" : "query",
          "description" : "生日",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "howto_know",
          "in" : "query",
          "description" : "如何得知",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "plate_num",
          "in" : "query",
          "description" : "車牌號碼及顏色",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "emergency_contact",
          "in" : "query",
          "description" : "緊急聯絡人",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "emergency_phone",
          "in" : "query",
          "description" : "緊急聯絡電話",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "emergency_addr",
          "in" : "query",
          "description" : "緊急聯絡處所",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Some fields are not completed"
          }
        }
      }
    },
    "/customer/{userid}/birth_order" : {
      "post" : {
        "tags" : [ "customer" ],
        "summary" : "建立胎次資料",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userid",
          "in" : "path",
          "description" : "UserID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "預產期",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "實際生產日期",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mobile_phone",
          "in" : "query",
          "description" : "生產地區",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "home_phone",
          "in" : "query",
          "description" : "生產醫院",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pos",
          "in" : "query",
          "description" : "生產方式",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "birth_order",
          "in" : "query",
          "description" : "胎次",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "maan_birth_order",
          "in" : "query",
          "description" : "沁月第幾胎",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "bring_children",
          "in" : "query",
          "description" : "是否會帶小孩入住？",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "visit_receptionist",
          "in" : "query",
          "description" : "參觀接待人",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "visit_date",
          "in" : "query",
          "description" : "參觀日期",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "signing_receptionist",
          "in" : "query",
          "description" : "簽約接待人",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "signing_date",
          "in" : "query",
          "description" : "簽約日期",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Some fields are not completed"
          }
        }
      }
    },
    "/common/get_type" : {
      "post" : {
        "tags" : [ "common" ],
        "summary" : "Get data of the specific type",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The type which you want",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "The type does not exist"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "petstore_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://petstore.swagger.io/oauth/dialog",
      "flow" : "implicit",
      "scopes" : {
        "write:pets" : "modify pets in your account",
        "read:pets" : "read your pets"
      }
    },
    "api_key" : {
      "type" : "apiKey",
      "name" : "api_key",
      "in" : "header"
    }
  },
  "definitions" : {
    "Order" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "petId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "shipDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "description" : "Order Status",
          "enum" : [ "placed", "approved", "delivered" ]
        },
        "complete" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "Order"
      }
    },
    "Category" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Category"
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "account" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "dept" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "User Department"
        },
        "role" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Roles"
        }
      },
      "example" : {
        "role" : 1,
        "name" : "name",
        "id" : 0,
        "dept" : 6,
        "account" : "account",
        "email" : "email"
      },
      "xml" : {
        "name" : "User"
      }
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Tag"
      }
    },
    "Pet" : {
      "type" : "object",
      "required" : [ "name", "photoUrls" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "category" : {
          "$ref" : "#/definitions/Category"
        },
        "name" : {
          "type" : "string",
          "example" : "doggie"
        },
        "photoUrls" : {
          "type" : "array",
          "xml" : {
            "name" : "photoUrl",
            "wrapped" : true
          },
          "items" : {
            "type" : "string"
          }
        },
        "tags" : {
          "type" : "array",
          "xml" : {
            "name" : "tag",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "status" : {
          "type" : "string",
          "description" : "pet status in the store",
          "enum" : [ "available", "pending", "sold" ]
        }
      },
      "xml" : {
        "name" : "Pet"
      }
    },
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    }
  }
}